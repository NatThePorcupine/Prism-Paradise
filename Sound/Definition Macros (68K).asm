; =========================================================================================================================================================
; Driver Definition Macros (68K-Side)
; =========================================================================================================================================================
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; Define a music entry
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
music_entry	macro	*, addr, flag
\*		rs.b	1
	if narg=2
		dc.b	(((\addr&$3F8000)/$8000)|$80)		; bank + force 50Hz speed flag
	else
		dc.b	((\addr&$3F8000)/$8000)			; bank
	endif
		dc.b	((\addr)&$FF),(((\addr)>>8&$7F)|$80)	; little endian pointer
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; Define a pcm id entry
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
pcm_id_entry	macro	*, id, pitch
\*		rs.b	1
		dc.b	\id, \pitch
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; Define a pcm pointer entry
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
pcm_ptr_entry	macro	*, addr
\*		rs.b	1
		dc.b	((\addr)&$FF),(((\addr)>>8&$7F)|$80)	; little endian pointer
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; Define an sfx pointer entry
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
sfx_ptr_entry	macro	*, addr
\*		pcm_ptr_entry	\addr
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; Define an id entry
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
id_entry	macro	id
		dc.b	\id
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; Define a bank entry
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
bank_entry	macro	addr
		dc.b	((\addr&$3F8000)/$8000)			; bank
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; Define an pointer entry
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
ptr_entry	macro	addr
		dc.b	((\addr)&$FF),(((\addr)>>8&$7F)|$80)	; little endian pointer
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
; Bank management macros
; ---------------------------------------------------------------------------------------------------------------------------------------------------------
__bankName	equs	""
__nextBank	set	0

start_bank	macro	*
	if	__nextBank=0
__bankName	equs	"\*"					; Name of the current bank
__nextBank	set	(*&$3F8000)+$8000			; 68K address of the beginning of the next bank
	else
		inform	3,"unexpected use of 'start_bank' within unfinished sound bank '\__bankName'."
	endif
		endm

end_bank	macro
		even
	if	__nextBank=0
		inform	3,"unexpected use of 'end_bank' without 'start_bank'."
	elseif	*>__nextBank
		inform	3,"data within sound bank '\__bankName' overflows into the next bank by %d bytes.",(*-__nextBank)
	else
__nextBank	set	0
	endif
		endm
; ---------------------------------------------------------------------------------------------------------------------------------------------------------